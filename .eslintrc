{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true,
    "jest": true
    // "jest/globals": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:tailwindcss/recommended",
    "plugin:jest/recommended",
    "plugin:jest/style"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks",
    "tailwindcss",
    "jest"
    // "prettier"
  ],
  "rules": {
    "prettier/prettier": "warn",
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          // add a custom message to help explain why not to use it
          "Foo": "Don't use Foo because it is unsafe",

          // add a custom message, AND tell the plugin how to fix it
          "OldAPI": {
            "message": "Use NewAPI instead",
            "fixWith": "NewAPI"
          },

          // un-ban a type that's banned by default
          "{}": false
        },
        "extendDefaults": true
      }
    ],
    "tailwindcss/classnames-order": "warn",
    "tailwindcss/no-custom-classname": "warn",
    "tailwindcss/no-contradicting-classname": "error"
  }
}
